// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppAccessContext.AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Structures.DBStructures.Attack", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("GameFK")
                        .HasColumnType("int");

                    b.Property<string>("col")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("hit")
                        .HasColumnType("bit");

                    b.Property<string>("row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Attacks");
                });

            modelBuilder.Entity("DataAccess.Structures.DBStructures.Board", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("GameFK")
                        .HasColumnType("int");

                    b.Property<int>("PlayerFK")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("DataAccess.Structures.DBStructures.Game", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("complete")
                        .HasColumnType("bit");

                    b.Property<int>("creatorFK")
                        .HasColumnType("int");

                    b.Property<int>("opponentFK")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("DataAccess.Structures.DBStructures.GameShipConfiguration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("GameFK")
                        .HasColumnType("int");

                    b.Property<int>("PlayerFK")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("GameShipConfigurations");
                });

            modelBuilder.Entity("DataAccess.Structures.DBStructures.Player", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            id = 1,
                            password = "test123456789",
                            username = "test"
                        },
                        new
                        {
                            id = 2,
                            password = "test12345678",
                            username = "test2"
                        });
                });

            modelBuilder.Entity("DataAccess.Structures.DBStructures.Relations.Board2Attack", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("AttackFK")
                        .HasColumnType("int");

                    b.Property<int>("BoardFK")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Boards2Attacks");
                });

            modelBuilder.Entity("DataAccess.Structures.DBStructures.Relations.Board2Ship", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("BoardFK")
                        .HasColumnType("int");

                    b.Property<int>("ShipFK")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Boards2Ships");
                });

            modelBuilder.Entity("DataAccess.Structures.DBStructures.Ship", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ShipTypeID")
                        .HasColumnType("int");

                    b.Property<string>("col")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orientation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("DataAccess.Structures.DBStructures.ShipTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("size")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ShipTypes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            size = 2,
                            title = "size 2"
                        },
                        new
                        {
                            id = 2,
                            size = 3,
                            title = "size 3"
                        },
                        new
                        {
                            id = 3,
                            size = 3,
                            title = "size 3"
                        },
                        new
                        {
                            id = 4,
                            size = 4,
                            title = "size 4"
                        },
                        new
                        {
                            id = 5,
                            size = 5,
                            title = "size 5"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
